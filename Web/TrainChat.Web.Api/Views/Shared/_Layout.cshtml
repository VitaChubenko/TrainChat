@using TrainChat.Web.Api.Localization

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link id="pagestyle" href="/Content/theme-green.css" rel="stylesheet"/>
    <link href="../../lib/css/nanoscroller.css" rel="stylesheet">
    <link href="../../lib/css/emoji.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>

    <!-- Begin emoji-picker JavaScript -->
    <script src="../../lib/js/nanoscroller.min.js"></script>
    <script src="../../lib/js/tether.min.js"></script>
    <script src="../../lib/js/config.js"></script>
    <script src="../../lib/js/util.js"></script>
    <script src="../../lib/js/jquery.emojiarea.js"></script>
    <script src="../../lib/js/emoji-picker.js"></script>
    <!-- End emoji-picker JavaScript -->
    <script>
    $(function() {
      // Initializes and creates emoji set from sprite sheet
      window.emojiPicker = new EmojiPicker({
        emojiable_selector: '[data-emojiable=true]',
        assetsPath: '../../lib/img/',
        popupButtonClasses: 'fa fa-smile-o'
      });
      // Finds all elements with `emojiable_selector` and converts them to rich emoji input fields
      // You may want to delay this step if you have dynamically created input fields that appear later in the loading process
      // It can be called as many times as necessary; previously converted input fields will not be converted again
      window.emojiPicker.discover();
    });
    </script>


    <script>
// Google Analytics
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-49610253-3', 'auto');
  ga('send', 'pageview');
    </script>
    <style>
        #menucontainer ul {
            text-align: justify;
            overflow: hidden;
        }

            #menucontainer ul:after {
                content: "";
                width: 100%;
                display: inline-block;
            }

        #menu li {
            display: inline;
            padding: 5px;
        }

        p {
            text-align: center;
        }
    </style>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script>
        (function () {
            var str = localStorage.getItem('href');
            if (str) {
                document.getElementById('pagestyle').setAttribute('href', str);
            }
            
        })();
    </script>
        </head>
        <body>
        <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
        <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        </button>
        @Html.ActionLink("TrainChat", "Index", "User", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
        <li>@Html.ActionLink(Pages.Home, "Index", "User", new { area = "" }, null)</li>
            <li>@Html.ActionLink("API", "Index", "Help", new {area = ""}, null)</li>
            <li>@Html.ActionLink(Pages.About, "About", "Home")</li>
            <li>@Html.ActionLink(Pages.Users, "Index", "Student")</li>
            <li>@Html.ActionLink(Pages.Rooms, "Index", "Course")</li>
            <li>@Html.ActionLink(Pages.Roles, "Index", "Instructor")</li>
            <li>@Html.ActionLink(Pages.Department, "Index", "Department")</li>
            <li>
                <a href="#" id="dropdown-toggle" data-toggle="dropdown"><i class="icon-cogs icon-large"></i> @Pages.Theme<b class="caret"></b></a>
                <ul class="dropdown-menu">
                    <li><a class="change-style-menu-item" id="green" onclick="swapStyleSheet('/Content/theme-green.css')"> @Pages.Green</a></li>
                    <li><a class="change-style-menu-item" id="dark" onclick="swapStyleSheet('/Content/theme-black.css')"> @Pages.Dark</a></li>
                </ul>
            </li>
            <li>
                <a href="#" id="dropdown-toggle" data-toggle="dropdown"><i class="icon-cogs icon-large"></i> @Pages.Language<b class="caret"></b></a>
                <ul class="dropdown-menu">
                    <li>@Html.ActionLink(Pages.English, "ChangeCulture", "Settings",
                            new {lang = "en-US", returnUrl = this.Request.RawUrl},null)
                    </li>
                    <li>
                        @Html.ActionLink(Pages.Russian, "ChangeCulture", "Settings",
                       new { lang = "ru-RU", returnUrl = this.Request.RawUrl},null) 
                    </li>
                </ul>
            </li>
        </ul>
        </div>
        </div>
        </div>
        <div class="container body-content">
        <div class="page">
        
        <div id="main">
        @RenderBody()
        </div>
        </div>

        <hr />
        <footer>
        <p>&copy; @DateTime.Now.Year - TrainChat</p>
        </footer>
        </div>

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)
        </body>
        </html>

        <script>  
        function SetStyle() {
            var str = localStorage.getItem('href');
            swapStyleSheet(str);
        }

    function swapStyleSheet(sheet) {
        //document.getElementById('pagestyle').setAttribute('href', sheet);
        $("#pagestyle").attr("href", sheet);
        localStorage.setItem('href', sheet);
    }
</script>